df<-read.csv("student-mat.csv")
df<-read.csv("/Users/xuan/R/student-mat.csv")
df
df<-read.csv("/Users/xuan/R/student-mat.csv",sep=";")
df
str(df)
any.isna(df)
any.is.na(df)
#預測G3成績
Num.col<-sapply(df,is.numeric)
df
Num.col
#相關係數data-df[row,colum]
cor.data<-cor(df[,Num.col])
cor.data
install.packages("corrgrame")
install.packages("corrplot")
library(corrgrame)
install.packages("corrgram")
library(corrgram)
library(corrplot)
corrplot(cor.data)
corrplot(cor.data,method = 'color')
pl
#G3
pl<-ggplog(df,aes(x=G3))
#G3
pl<-ggplot(df,aes(x=G3))
install.packages("ggplot2")
library(ggplot2)
#G3
pl<-ggplot(df,aes(x=G3))
pl
pl+geom_bar()
corrgram(df,order=T,lower.panel=panel.shade,upper.panel=panel.pie,text.panel=panel.txt)
corrgram(df,order=T,upper.panel=panel.shade,lower.panel=panel.pie,text.panel=panel.txt)
corrgram(df,order=T,lower.panel=panel.pie,text.panel=panel.txt)
corrgram(df,order=T,upper.panel=panel.shade,lower.panel=panel.pie,text.panel=panel.pie)
corrgram(df,order=T,upper.panel=panel.shade,lower.panel=panel.pie,text.panel=panel.txt)
install.packages("caTools")
library(caTools)
sample<-sample.split(df$G3,SplitRatio = 0.7)
sample
Train<-subset(df,Sample==T)
sample<-sample.split(df$G3,SplitRatio = 0.7)
train<-subset(df,sample==T)
test<-subset(df,sample==F)
train
test
model<-lm(G3~.,data=train)
summury(model)
model<-lm(G3~.,data=train)
summary(model)
res<-residuals(model)
res
ppl<-ggplot(res,aes(res))
res<-residuals(model)
ppl<-ggplot(as.data.frame(res),aes(res))
ppl+geom_histogram(fill="blue",alpha=0.5)
ress<-as.data.frame(res)
ress
ppl<-ggplot(ress,aes(res))
ppl+geom_histogram(fill="blue",alpha=0.5)
G3.prediction<-pridict(model,test)
G3.prediction<-predict(model,test)
result<-cbind(G3.prediction,test$G3)
colnames(result)<-c("pred","real")
result
G3.prediction<-predict(model,test)
result<-cbind(round(G3.prediction,0),test$G3)
colnames(result)<-c("pred","real")
result
result<-as.data.frame(result)
mse<-mean((result$real-result$pred)^2))
result<-as.data.frame(result)
mse<-mean((result$real-result$pred)^2)
remse<-mse^0.5
#R value
SSE<-sum((result$pred-result$real)^2)
SST<-sum((mean(df$G3)-result$real)^2)
R2<-1-SSE/SST
R2
